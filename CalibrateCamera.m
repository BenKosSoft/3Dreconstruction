%% Info
%{
owners: mertkosan (Mert Kosan), mbenlioglu(Muhammed Mucahid Benlioglu)
created date: 10.01.2017

Camera Calibration using computer vision toolbox
%}

%% Calibration
% Define images to process
imageFileNames = {'CalibrationImages/2/20170110_233339.jpg',...
    'CalibrationImages/2/20170110_233343.jpg',...
    'CalibrationImages/2/20170110_233347.jpg',...
    'CalibrationImages/2/20170110_233350.jpg',...
    'CalibrationImages/2/20170110_233352.jpg',...
    'CalibrationImages/2/20170110_233409.jpg',...
    'CalibrationImages/2/20170110_233411.jpg',...
    'CalibrationImages/2/20170110_233412.jpg',...
    'CalibrationImages/2/20170110_233415.jpg',...
    'CalibrationImages/2/20170110_233416.jpg',...
    'CalibrationImages/2/20170110_233418.jpg',...
    'CalibrationImages/2/20170110_233422.jpg',...
    'CalibrationImages/2/20170110_233424.jpg',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Generate world coordinates of the corners of the squares
squareSize = 10;  % in units of 'mm'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'mm', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', []);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams, 'BarGraph');

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);
